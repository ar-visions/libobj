
class String {
    override C from_cstring(const char *);
    override C to_string(C);
    override C from_string(C);
    override void free(C);
    override C copy(C);
    override ulong hash(C);
    override int compare(C,C);
    int char_index(C,int);
    int str_index(C,const char *);
    int str_rindex(C,const char *);
    C upper(C);
    C lower(C);
    C new_string(const char *);
    int cmp(C,const char *);
    void check_resize(C, uint);
    void concat_char(C, const char);
    void concat_chars(C, const char *, int);
    void concat_string(C, C);
    void concat_long(C, long, const char *);
    void concat_long_long(C, uint64, const char *);
    void concat_double(C, double, const char *);
    void concat_object(C, Base);
    C from_bytes(const uint8 *, size_t);
    C format(const char *,...);
    bool to_file(C, const char *);
    uint * decode_utf8(C, uint *);
    C from_file(const char *);
    Base infer_object(C);
    private uint utf8_length;
    private uint * utf8_buffer;
    private char * buffer;
    private size_t buffer_size;
    private size_t length;
};