import <stdio, stdlib>

import WGPU [
    source   [ https://github.com/ar-visions/dawn@2e9297c45f48df8be17b4f3d2595063504dac16c ]
    build    [ -DDAWN_ENABLE_INSTALL=1  -DBUILD_SHARED_LIBS=0 ]
    includes [ dawn/webgpu  dawn/dawn_proc_table ]
    links    [ stdc++ ]
]

enum cool-teens : i8 [
    clint
    tim
    hunter
    marc
]

class class1 [
    int a
    int b
    void print[ ] [
        printf[ '[class1] %s: the values of a & b are: %i, %i', 'testing', a, b ]
        return
    ]
]

class class2 : class1 [
    void print[ ] [
        printf[ '[class2] hi. the values of a & b are: %i, %i', a, b ]
        return
    ]
]

class class3 [
    int something
    class1[] cast [
        class1 test
        return test # class1[ a: something * 2 ]
    ]
]

##
first we make string better in A-type
vector could be inherited the same way as class
anytime we need templates in design, we may code function members for model
##

##
vector string : i8 [
    string mid[ int start, int len ] [
        # all of our classes must use the module-level functions in memory, storage, etc
        return copy[ start, len ]
    ]

    void print-something[] [
        printf[ 'my cstring we may access with data', data ]
    ]

    # all vectors of model M get:
    #     M cast  [ ... ]
    #       alloc [ count ]
    #     T copy  [ from-index, count ]
    # ptr M index [ int index ]

    # useful part of vector type is the inherit argument becomes the model we use
    # when you inherit another vector you are vectorizing its model, not inheriting it
]
##

##
extend cstring [
    string cast [
        return string[ this, strlen[ this ]]
    ]
]
##

int main[ ] [
    #class1 cl : [class1, class3[ something: 1 ]]

    #cool-teens cl : cool-teens.clint
    printf[ 'this %i is for %s\n', 1, 'clint' ]
    return cool-teens.clint
]