#ifndef _IMPORT_
#define _IMPORT_
#include <silver>
#include <tokens>



#define ImportType_schema(X,Y) \
    enum_value(X,Y, none) \
    enum_value(X,Y, source) \
    enum_value(X,Y, includes) \
    enum_value(X,Y, library) \
    enum_value(X,Y, project)
declare_enum(ImportType)

#define BuildState_schema(X,Y) \
    enum_value(X,Y, none) \
    enum_value(X,Y, built)
declare_enum(BuildState)

#define Import_schema(X,Y) \
    i_prop    (X,Y, public, Tokens,     tokens) \
    i_prop    (X,Y, intern, silver,     mod) \
    i_prop    (X,Y, intern, string,     name) \
    i_prop    (X,Y, intern, array,      source) \
    i_prop    (X,Y, intern, string,     shell) \
    i_prop    (X,Y, intern, string,     isolate_namespace) \
    i_prop    (X,Y, intern, path,       module_path) \
    i_prop    (X,Y, intern, bool,       imported) \
    i_prop    (X,Y, intern, array,      includes) \
    i_prop    (X,Y, intern, array,      cfiles) \
    i_prop    (X,Y, intern, array,      links) \
    i_prop    (X,Y, intern, array,      build_args) \
    i_prop    (X,Y, intern, ImportType, import_type) \
    i_prop    (X,Y, intern, array,      library_exports) \
    i_prop    (X,Y, intern, Visibility, visibility) \
    i_prop    (X,Y, intern, string,     main_symbol) \
    i_method  (X,Y, public, none,       process) \
    i_override(X,Y, method, init)
declare_class(Import)

#endif