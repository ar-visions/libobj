# todo: should be checked out and installed without import, since A is our runtime
import A [
    source:     'https://github.com/ar-visions/A',
    links:      ['A']
]

# this makes it available
public import WGPU [
    source:     'https://github.com/ar-visions/dawn@2e9297c45f48df8be17b4f3d2595063504dac16c',
    build:      ['-DDAWN_ENABLE_INSTALL=1', '-DBUILD_SHARED_LIBS=0'],
    includes:   ['dawn/webgpu', 'dawn/dawn_proc_table'],
    links:      ['webgpu_dawn']
]

import <stdlib, stdint, stdio>

meta [K,V]
class map [
    void print[] [
        return
    ]
]

class delegate [
    void method1[ int arg ] [
        return
    ]
]

meta [I]
class test [
    # I member
    void something[] [
        bool res: I is i32 # our AST can infact run to some degree and optimize its statements, but to be honest thats really too much to be doing
        I dynamic: I[]
        I.method1 [ 2 ]
    ]
]

class app [
    # WGPUAdapter in C99 is a struct WGPUAdapterImpl* type (opaque-reference)
    static none onAdapterRequestEnded[
            WGPURequestAdapterStatus status, WGPUAdapter adapter,
            symbol message, handle userdata] [

        ref handle u: ref userdata
        handle something: userdata

        u: something
        
        # we need to handle no token name for test[], so just []
        test::delegate t1: test[] 
        t1.something[]

        return
    ]

    none call_lambda[] [
        #lambda_desc[ 2, 2 ]
        return
    ]

    num run [] [
        return 0
    ]
]