
# programming languages are judged based on how well they facilitate vectorization
# if it can happen without even doing these at all, thats ideal but i dont see how

# these are all const, you cant change them anywhere
double nan: @nan[]

template [T] # generics do not need you to specify the bitcount for the primitive you are targeting, as those are the variability want to allow for
mod vec2 [
    vec2 [T x] [x:x, y:x]
    vec2 [T x, T y]

    # arithmetic operators
    vec2 add[vec2 b] return [x + b.x, y + b.y]
    vec2 sub[vec2 b] return [x - b.x, y - b.y]
    vec2 mul[vec2 b] return [x * b.x, y * b.y]
    vec2 div[vec2 b] return [x / b.x, y / b.y]
]

# an array of int is going to be contiguous address space even if we are using mod int, it is using a mod with a base type